import React, { useState } from "react";
import {
  Lock,
  Wallet,
  Boxes,
  BarChart3,
  DollarSign,
  Layout,
  Rocket,
} from "lucide-react";
import { Link } from "react-router-dom";

// Options for the feature cards
const options = [
  { title: "IPFS Storage", icon: <Lock /> , description: "Explore a new frontier in decentralized data storage with Kalp Studio's IPFS Integration. Our platform seamlessly incorporates the InterPlanetary File System (IPFS), enabling users to store and retrieve data in a distributed and censorship-resistant manner."},
  { title: "Smart Contract", icon: <Wallet /> ,description:"Kalp Studio presents Smart Contract Management, a dynamic solution for seamlessly overseeing the lifecycle of smart contracts within your projects. Upload your smart contract effortlessly, witness instant deployment, and track its status in real-time."},
  { title: "Digital Asset Platform", icon: <Boxes /> ,description:"Kalp Studio elevates blockchain integration with the Digital Asset Platform, a developer-centric workspace for efficient digital asset creation and deployment. Designed to empower both individual developers and technical teams, the platform seamlessly streamlines the process through intuitive features like one-click smart contract upload and automated API endpoint generation."},
  { title: "NFT Platform", icon: <Lock /> ,description:"NiftiQ - Our Asset Marketplace is a digital platform designed to facilitate the buying, selling, and trading of digital, unique and limited edition assets. These unique digital assets represent ownership of digital art, collectibles, virtual real estate, and other digital items, utilizing blockchain technology for secure ownership verification and provenance tracking."},
  { title: "Middle Box", icon: null, isUnclickable: true }, // Middle box (unclickable)
    { title: "Token Creator", icon: <Wallet />,description:"Introducing Token Creator, a revolutionary tool within Kalp Studio's low-code platform that empowers users to seamlessly initiate and deploy smart contracts. With just a few clicks, users can jumpstart their blockchain projects and effortlessly bring their smart contract visions to life." },
  { title: "CBDC", icon: <Boxes /> ,description:"Kalp Studio introduces seamless integration for Central Bank Digital Currency (CBDC), revolutionizing the landscape of digital transactions. Our platform empowers financial institutions and enterprises to harness the potential of CBDCs, offering a secure and efficient gateway to the future of digital finance."},
  { title: "BAAS", icon: <Lock /> ,description:"Ditch the blockchain buildout and focus on innovation! Our Blockchain-as-a-Service (BaaS) empowers you to spin up secure, scalable blockchain applications in minutes, not months. Forget complex infrastructure and custom coding â€“ enjoy low-code development, chain agnosticism, and effortless smart contract management."},
  { title: "API Gateway", icon: <Wallet /> ,description:"Kalp Studio's API Gateway effortlessly incorporates autogenerated API endpoints, establishing a robust connection between your applications and smart contracts. This formidable synergy guarantees a seamless and efficient communication channel, enabling developers to easily oversee and optimize their blockchain transactions."},
];

// Feature Card Component
const FeatureCard = ({ icon, title, onClick, isSelected, isUnclickable }) => (
  <div
    className={`flex flex-col  items-center justify-center w-[150px] h-[150px] rounded-[22.5px] gap-6 shadow- transition ${
      isUnclickable
        ? "bg-transparent cursor-not-allowed" // Style for the unclickable box
        : isSelected
        ? "bg-black text-white "
        : "bg-[#CFD2F15C] cursor-pointer "
    }`}
    onClick={!isUnclickable ? onClick : undefined} // Prevent click if unclickable
  >
    {title === "Middle Box" ? (
      <img
        src="../vector.png"
        alt="Middle Box"
        className="w-[120px] h-[70px] "
      />
    ) : (
      <>
      {/* Icon with customizable size */}
      <div className="text-4xl mb-2">{React.cloneElement(icon, { className: "w-[51px] h-[51px]" })}</div>
      <h3 className="text-center text-[18px] ">{title}</h3>
    </>
    )}
  </div>
);

// Feature Box Component
const FeatureBox = ({ title, description, icon: Icon, className }) => (
  <div
    className={`relative bg-gray-900/60  p-8 rounded-2xl  border border-gray-800 max-w-md ${className}`}
  >
    <div className="absolute -top-6 -right-6 p-4 bg-indigo-600/20 rounded-full ">
      <Icon className="w-6 h-6 text-indigo-400" />
    </div>
    <h3 className="text-xl font-semibold text-white mb-3">{title}</h3>
    <p className="text-gray-400 text-sm leading-relaxed">{description}</p>
  </div>
);

const App = () => {
  const [selectedOption, setSelectedOption] = useState(options[0]); // Default to the first feature

  return (
    <div className=" bg-gray-50">
      <div className="container mx-auto px-8">
      <div className="text-center py-12">
        <h1 className="text-[64px] font-extrabold text-gray-900">
          <span className="text-purple-500">Scale</span> your project on our
        </h1>
        <h1 className="text-[64px] font-extrabold">robust platform</h1>
      </div>

      {/* Flex layout for feature cards and content display */}
      <div className="flex flex-col lg:flex-row w-full justify-between gap-60">
        {/* Feature Cards Section */}
        <div className="grid grid-cols-3 gap-6 justify-start items-start w-1/2 bg-[radial-gradient(50%_50%_at_50%_50%,_rgba(235,_255,_177,_0.39)_0%,_hsla(0,_0%,_100%,_0)_100%)]">
          {options.map((option, index) => (
            <FeatureCard
              key={index}
              icon={option.icon}
              title={option.title}
              isUnclickable={option.isUnclickable}
              onClick={() => !option.isUnclickable && setSelectedOption(option)}
              isSelected={selectedOption.title === option.title}
            />
          ))}
        </div>

        {/* Dynamic Content Section */}
        <div className="flex flex-col items-start justify-center lg:ml-24 w-1/2">
          <h2 className="text-[48px] font-bold pt-4 text-gray-800">
            {selectedOption.title}
          </h2>
          <p className="mt-4 text-[20px] text-gray-600">
            {selectedOption.description}.
          </p>
          <Link to="/signup">
            <button className="mt-6 px-6 py-2 w-[152px] h-[54px] bg-black text-white rounded-lg shadow-lg hover:bg-[#CBFD13] hover:text-black">
              Get Started
            </button>
          </Link>
        </div>
      </div>
      </div>
    </div>
  );
};

// BuildWith Component
const BuildWith = () => (
  <div className="[h-795px] bg-gray-950 flex items-center justify-center p-8 mt-20">
    <div container mx-auto px-8>
    <div className="text-center mb-20">
      <h1 className="text-[48px] font-bold mb-4">
        <span className="text-lime-400">Build</span>{" "}
        <span className="text-white">with Kalp Studio</span>
      </h1>
      <p className="text-gray-400 max-w-2xl mx-auto">
        Elevate your projects effortlessly. From creation to deployment, unlock
        innovation with Kalp Studio's powerful and user-friendly platform.
      </p>

      <div className="relative p-[40px]">
        {/* Central diamond shape */}
        <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-32 h-32">
          <div className="relative w-full h-full">
            <div className="absolute inset-0 bg-lime-400/20 transform rotate-45"></div>
            <div className="absolute inset-2 bg-gray-900/60 transform rotate-45 backdrop-blur-sm"></div>
          </div>
        </div>

        {/* Feature Boxes */}
        <div className="grid grid-cols-2 gap-x-64 gap-y-32 mt-4">
          <FeatureBox
            title="Analytics"
            description="Gain insights with Kalp Studio's analytics. Optimize decision-making, track performance, and elevate your project's success."
            icon={BarChart3}
            className="transform hover:-translate-y-2 transition-transform rounded-lg"
          />
          <FeatureBox
            title="Flexible pricing"
            description="Tailor costs to your needs with Kalp Studio's flexible pricing."
            icon={DollarSign}
            className="transform hover:-translate-y-2 transition-transform"
          />
          <FeatureBox
            title="Ready to use templates"
            description="Start with ease using Kalp Studio's smart contract templates. Jumpstart your project with pre-built, customizable solutions for seamless integration."
            icon={Layout}
            className="transform hover:-translate-y-2 transition-transform"
          />
          <FeatureBox
            title="Faster MVP launch"
            description="Accelerate your MVP launch with Kalp Studio's low-code efficiency."
            icon={Rocket}
            className="transform hover:-translate-y-2 transition-transform"
          />
        </div>
      </div>
    </div>
    </div>
  </div>
);

// Combined Component
const Combine = () => (
  <div>
    <App />
    <BuildWith />
  </div>
);

export default Combine;
